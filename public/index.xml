<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vinicius Alves</title>
    <link>https://ovalves.github.io/</link>
    <description>Recent content on Vinicius Alves</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-BR</language>
    <copyright>Vinicius Alves</copyright>
    <lastBuildDate>Wed, 16 Sep 2020 17:51:40 +0000</lastBuildDate>
    
	<atom:link href="https://ovalves.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Manual Devops</title>
      <link>https://ovalves.github.io/posts/manual-devops/anotacoes/</link>
      <pubDate>Mon, 07 Feb 2022 18:20:00 +0000</pubDate>
      
      <guid>https://ovalves.github.io/posts/manual-devops/anotacoes/</guid>
      <description>O CONFLITO CRÔNICO BÁSICO  O termo “dívida técnica” foi cunhado pela primeira vez por Ward Cunningham. Análoga à dívida financeira, a dívida técnica descreve como as decisões que tomamos levam a problemas cada vez mais difíceis de corrigir com o passar do tempo, reduzindo continuamente as opções disponíveis no futuro — mesmo quando enfrentados prudentemente, ainda incorremos em juros.
&amp;ndash; Kim, Gene; Humble, Jez; Debois, Patrick; Willis, John. Manual De DevOps (p.</description>
    </item>
    
    <item>
      <title>Sistemas de recomendação</title>
      <link>https://ovalves.github.io/posts/ia/recommender-system/</link>
      <pubDate>Thu, 29 Oct 2020 16:25:00 +0000</pubDate>
      
      <guid>https://ovalves.github.io/posts/ia/recommender-system/</guid>
      <description>Código do projeto no github
Introdução Definição da Wikipedia - Um Sistema de Recomendação combina várias técnicas computacionais para selecionar itens personalizados com base nos interesses dos usuários e conforme o contexto no qual estão inseridos. Tais itens podem assumir formas bem variadas como, por exemplo, livros, filmes, notícias, música, vídeos, anúncios, links patrocinados, páginas de internet, produtos de uma loja virtual, etc. Empresas como Amazon, Netflix e Google são reconhecidas pelo uso intensivo de sistemas de recomendação com os quais obtém grande vantagem competitiva.</description>
    </item>
    
    <item>
      <title>Deploy automático e testes de aplicações Laravel com GitLab CI/CD</title>
      <link>https://ovalves.github.io/posts/automation/laravel-gitlab-ci-cd/</link>
      <pubDate>Wed, 30 Sep 2020 23:55:00 +0000</pubDate>
      
      <guid>https://ovalves.github.io/posts/automation/laravel-gitlab-ci-cd/</guid>
      <description>Introdução Neste tutorial iremos utilizar o sistema de CI/CD do GitLab para automatizarmos os testes e disponibilizarmos as novas versões do software de forma contínua e descomplicada.
Iremos utilizar o framework PHP Laravel. Iremos configurar tarefas com o Envoy, e depois veremos como testar o software e implantá-lo com GitLab CI / CD via Entrega Contínua.
 PS.: Este tutorial leva em conta que você já tenha instalado o framework laravel, tenha instalado alguma distribuição do linux, bem como o NGINX, e o PHP.</description>
    </item>
    
    <item>
      <title>Redes Neurais Artificiais</title>
      <link>https://ovalves.github.io/posts/ia/rede-neural-simples/</link>
      <pubDate>Thu, 24 Sep 2020 21:35:00 +0000</pubDate>
      
      <guid>https://ovalves.github.io/posts/ia/rede-neural-simples/</guid>
      <description>Introdução O tipo mais comum de rede neural artificial é uma rede feedforward com retropropagação (backpropagation). Em uma rede feedforward cada camada se conecta à próxima camada não havendo caminho de volta. Todas as suas conexões se movem em uma única direção, partindo da camada de entrada rumo a camada de saída.
Perceptron Inventada em 1958 por Frank Rosenblatt no Cornell Aeronautical Laboratory o perceptron é um tipo de rede neural artificial.</description>
    </item>
    
    <item>
      <title>Cron Job no Laravel</title>
      <link>https://ovalves.github.io/posts/php/laravel/cron-job/cron-job-laravel/</link>
      <pubDate>Wed, 23 Sep 2020 12:39:00 +0000</pubDate>
      
      <guid>https://ovalves.github.io/posts/php/laravel/cron-job/cron-job-laravel/</guid>
      <description>Código do projeto no github
Introdução Antigamente precisávamos criar várias entradas no crontab para cada tarefa que precisava ser agendar no servidor. No entanto, isso pode rapidamente se tornar um problema, uma vez que a programação das tarefas agendadas não está mais no working directory.
Resumindo, para registrar uma nova tarefa precisamos acessar o servidor e adicionar mais uma entrada no crontab.
O agendador de tarefas do Laravel (command scheduler) nos permite definir de forma fluente e expressiva uma programação de comandos dentro do próprio Laravel.</description>
    </item>
    
    <item>
      <title>Git Básico</title>
      <link>https://ovalves.github.io/posts/git/git-basico/</link>
      <pubDate>Wed, 23 Sep 2020 11:11:00 +0000</pubDate>
      
      <guid>https://ovalves.github.io/posts/git/git-basico/</guid>
      <description>Introdução Git é um sistema de controle de versões distribuído, usado principalmente no desenvolvimento de software. O git pode ser usado para registrar o histórico de edições de qualquer tipo de arquivo, ele foi inicialmente projetado e desenvolvido por Linus Torvalds para o desenvolvimento do kernel Linux.
Controle de versão Um sistema de controle de versão é um software com a finalidade de gerenciar diferentes versões no desenvolvimento de documentos. Esses sistemas são utilizados no desenvolvimento de software para controlar suas versões, manter o histórico de atualizações, e para o desenvolvimento de códigos-fontes e documentação.</description>
    </item>
    
    <item>
      <title>Construindo um framework web em PHP - Parte 1</title>
      <link>https://ovalves.github.io/posts/php/building-php-framework-1/</link>
      <pubDate>Wed, 16 Sep 2020 18:11:40 +0000</pubDate>
      
      <guid>https://ovalves.github.io/posts/php/building-php-framework-1/</guid>
      <description>Código do projeto no github
Introdução Nesta série de artigos irei abordar todos os passos necessários para a construção de um framework completo em PHP. Da criação do sistema de roteamento à a criação de uma template engine simples. Em cada etapa da criação você terá um framework web funcional. Começaremos com um framework bem simples e iremos acrescentando mais recursos com o tempo.
Motivação Muitos desenvolvedores iniciam suas carreiras já programando em cima de abstrações, vide a imensa quantidade de desenvolvedores &amp;ldquo;laravel&amp;rdquo; ou &amp;ldquo;react&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Sobre</title>
      <link>https://ovalves.github.io/about/</link>
      <pubDate>Wed, 16 Sep 2020 17:51:40 +0000</pubDate>
      
      <guid>https://ovalves.github.io/about/</guid>
      <description>Desenvolvedor de software entusiasta com 4 anos de experiência tendo participado do ciclo de vida completo de desenvolvimento e manutenção de sistemas de grande porte e sistemas críticos com carga massiva de dados.
Em funções anteriores, trabalhei no desenvolvimento de um framework de testes baseado no PHPUnit. Esse framework era usado para testar os sistemas legados da empresa, chegando em certos casos a reduzir 100% dos erros causados por má codificação e/ou testes viciados e reduzindo significativamente o tempo entre as entregas das demandas dos projetos.</description>
    </item>
    
  </channel>
</rss>