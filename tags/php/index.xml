<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP on Vinicius Alves</title>
    <link>https://ovalves.github.io/tags/php/</link>
    <description>Recent content in PHP on Vinicius Alves</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-BR</language>
    <copyright>Vinicius Alves</copyright>
    <lastBuildDate>Wed, 30 Sep 2020 23:55:00 +0000</lastBuildDate><atom:link href="https://ovalves.github.io/tags/php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploy automático e testes de aplicações Laravel com GitLab CI/CD</title>
      <link>https://ovalves.github.io/posts/automation/laravel-gitlab-ci-cd/</link>
      <pubDate>Wed, 30 Sep 2020 23:55:00 +0000</pubDate>
      
      <guid>https://ovalves.github.io/posts/automation/laravel-gitlab-ci-cd/</guid>
      <description>Introdução Neste tutorial iremos utilizar o sistema de CI/CD do GitLab para automatizarmos os testes e disponibilizarmos as novas versões do software de forma contínua e descomplicada.
Iremos utilizar o framework PHP Laravel. Iremos configurar tarefas com o Envoy, e depois veremos como testar o software e implantá-lo com GitLab CI / CD via Entrega Contínua.
 PS.: Este tutorial leva em conta que você já tenha instalado o framework laravel, tenha instalado alguma distribuição do linux, bem como o NGINX, e o PHP.</description>
    </item>
    
    <item>
      <title>Cron Job no Laravel</title>
      <link>https://ovalves.github.io/posts/php/laravel/cron-job/cron-job-laravel/</link>
      <pubDate>Wed, 23 Sep 2020 12:39:00 +0000</pubDate>
      
      <guid>https://ovalves.github.io/posts/php/laravel/cron-job/cron-job-laravel/</guid>
      <description>Código do projeto no github
Introdução Antigamente precisávamos criar várias entradas no crontab para cada tarefa que precisava ser agendar no servidor. No entanto, isso pode rapidamente se tornar um problema, uma vez que a programação das tarefas agendadas não está mais no working directory.
Resumindo, para registrar uma nova tarefa precisamos acessar o servidor e adicionar mais uma entrada no crontab.
O agendador de tarefas do Laravel (command scheduler) nos permite definir de forma fluente e expressiva uma programação de comandos dentro do próprio Laravel.</description>
    </item>
    
    <item>
      <title>Construindo um framework web em PHP - Parte 1</title>
      <link>https://ovalves.github.io/posts/php/building-php-framework-1/</link>
      <pubDate>Wed, 16 Sep 2020 18:11:40 +0000</pubDate>
      
      <guid>https://ovalves.github.io/posts/php/building-php-framework-1/</guid>
      <description>Código do projeto no github
Introdução Nesta série de artigos irei abordar todos os passos necessários para a construção de um framework completo em PHP. Da criação do sistema de roteamento à a criação de uma template engine simples. Em cada etapa da criação você terá um framework web funcional. Começaremos com um framework bem simples e iremos acrescentando mais recursos com o tempo.
Motivação Muitos desenvolvedores iniciam suas carreiras já programando em cima de abstrações, vide a imensa quantidade de desenvolvedores &amp;ldquo;laravel&amp;rdquo; ou &amp;ldquo;react&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>
